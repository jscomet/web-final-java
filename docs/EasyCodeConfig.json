{
  "author" : "jscomet",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "MybatisPlus-Mixed",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "matchType" : "REGEX",
        "columnType" : "varchar(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "char(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|medium|long)*text",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "decimal(\\(\\d+,\\d+\\))?",
        "javaType" : "java.lang.Double"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "integer",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "REGEX",
        "columnType" : "tiny*int(\\(\\d+\\))?",
        "javaType" : "java.lang.Boolean"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|small|medium)*int(\\(\\d+\\))?",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int4",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int8",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "REGEX",
        "columnType" : "bigint(\\(\\d+\\))?",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "date",
        "javaType" : "java.time.LocalDate"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "datetime",
        "javaType" : "java.time.LocalDateTime"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "timestamp",
        "javaType" : "java.time.LocalDateTime"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "time",
        "javaType" : "java.time.LocalTime"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "boolean",
        "javaType" : "java.lang.Boolean"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "float",
        "javaType" : "java.lang.Float"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int(10) unsigned",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int(11) unsigned",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "double",
        "javaType" : "java.lang.Double"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "mediumint(8) unsigned",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "json",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "bit(24)",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "nvarchar(50)",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "nvarchar(20)",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "nvarchar(250)",
        "javaType" : "java.lang.String"
      } ]
    }
  },
  "template" : {
    "MybatisPlus-Mixed" : {
      "name" : "MybatisPlus-Mixed",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport $!{tableInfo.savePackageName}.util.beans.CommonResult;\nimport $!{tableInfo.savePackageName}.util.beans.ListResult;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport org.springframework.http.HttpStatus;\nimport jakarta.annotation.Resource;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表控制层\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Tag(name = \"$!{tableInfo.name}\", description = \"$!{tableInfo.comment}\")\n@RestController\n@RequestMapping(\"/$!tool.firstLowerCase($tableInfo.name)\")\npublic class $!{tableName} {\n    @Resource\n    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;\n\n    @Operation(summary = \"获取指定$!{tableInfo.comment}信息\")\n    @GetMapping(\"/info/{id}\")\n    public CommonResult<$!{tableInfo.name}VO> get$!{tableInfo.name}(@PathVariable $!pk.shortType id) {\n        $!{tableInfo.name}VO vo = $!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id);\n        return vo != null ? CommonResult.success(vo) : CommonResult.error(HttpStatus.NOT_FOUND);\n    }\n\n    @Operation(summary = \"获取$!{tableInfo.comment}列表\")\n    @GetMapping(\"/list\")\n    public CommonResult<ListResult<$!{tableInfo.name}VO>> get$!{tableInfo.name}s(@RequestParam(defaultValue = \"1\") Integer current,\n            @RequestParam(defaultValue = \"10\") Integer pageSize,\n            $!{tableInfo.name}Query param) {\n        List<$!{tableInfo.name}VO> list = $!{tool.firstLowerCase($tableInfo.name)}Service.queryAll(current, pageSize, param);\n        int total = $!{tool.firstLowerCase($tableInfo.name)}Service.count(param);\n        return CommonResult.success(new ListResult<>(list, total));\n    }\n\n    @Operation(summary = \"添加$!{tableInfo.comment}\")\n    @PostMapping(\"/add\")\n    public CommonResult<Boolean> add$!{tableInfo.name}(@RequestBody $!{tableInfo.name} param) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.save(param) ? CommonResult.success(true) : CommonResult.error(HttpStatus.BAD_REQUEST);\n    }\n\n    @Operation(summary = \"修改指定$!{tableInfo.comment}信息\")\n    @PutMapping(\"/update/{id}\")\n    public CommonResult<Boolean> update$!{tableInfo.name}(@PathVariable $!pk.shortType id,\n            @RequestBody $!{tableInfo.name} param) {\n            param.set$!{tool.firstUpperCase($!pk.name)}(id);\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.updateById(param) ? CommonResult.success(true) : CommonResult.error(HttpStatus.BAD_REQUEST);\n    }\n\n    @Operation(summary = \"删除指定$!{tableInfo.comment}\")\n    @DeleteMapping(\"/delete/{id}\")\n    public CommonResult<Boolean> delete$!{tableInfo.name}(@PathVariable $!pk.shortType id) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.removeById(id) ? CommonResult.success(true) : CommonResult.error(HttpStatus.NOT_FOUND);\n    }\n}"
      }, {
        "name" : "dao.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Dao\")\n\n##保存文件（宏定义）\n#save(\"/dao\", \"Dao.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"dao\")\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\nimport java.util.List;\n\nimport org.apache.ibatis.annotations.Mapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport org.apache.ibatis.annotations.Param;\nimport $!{tableInfo.savePackageName}.entity.po.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.entity.po.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\n@Mapper\npublic interface $!{tableName} extends BaseMapper<$!tableInfo.name> {\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name);\n\n    /**\n     * 筛选条件查询\n     *\n     * @param param 查询参数\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}VO> queryAll($!{tableInfo.name}Query param);\n\n    /**\n     * 筛选条件计数\n     *\n     * @param param 查询参数\n     * @return 数量\n     */\n    int count($!{tableInfo.name}Query param);\n    /**\n    * 批量新增数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{tableInfo.name}> 实例对象列表\n    * @return 影响行数\n    */\n    int insertBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n\n    /**\n    * 批量新增或按主键更新数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{tableInfo.name}> 实例对象列表\n    * @return 影响行数\n    * @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参\n    */\n    int insertOrUpdateBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n\n}\n\n\n\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/po\", \".java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.po\")\n\n##使用全局变量实现默认包导入\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serial;\nimport java.io.Serializable;\n$!{autoImport.vm}\n\n##使用宏定义实现类注释信息\n#tableComment(\"实体类\")\n@Data\npublic class $!{tableInfo.name} implements Serializable {\n    @Serial\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.pkColumn)\n    #if(${column.comment})\n    /**\n     * ${column.comment}\n     */\n    @Schema(description = \"${column.comment}\")#end\n    \n    @TableId(value = \"$column.obj.name\")\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n\n#end\n\n#foreach($column in $tableInfo.otherColumn)\n    #if(${column.comment})\n    /**\n     * ${column.comment}\n     */\n    @Schema(description = \"${column.comment}\")#end\n    \n    @TableField(value = \"$column.obj.name\")\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n\n#end\n## #foreach($column in $tableInfo.fullColumn)\n## ##使用宏定义实现get,set方法\n## #getSetMethod($column)\n## #end\n\n}"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Dao.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao\">\n\n\n    <resultMap id=\"$!{tableInfo.name}Map\" type=\"$!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name}\">\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n    \n    <resultMap id=\"$!{tableInfo.name}VOMap\" type=\"$!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO\" extends=\"$!{tableInfo.name}Map\" autoMapping=\"true\"/>\n\n    <!--查询单个-->\n    <select id=\"queryById\" resultMap=\"$!{tableInfo.name}VOMap\">\n        select *\n        from `$!tableInfo.obj.name`\n        where `$!pk.obj.name` = #{$!pk.name}\n    </select>\n\n     <!--筛选条件-->\n   <sql id=\"queryCondition\">\n        <where>\n#foreach($column in $tableInfo.fullColumn)\n            <if test=\"$!column.name != null#if($column.type.equals(\"java.lang.String\")) and $!column.name != ''#end\">\n                and `$!column.obj.name` = #{$!column.name}\n            </if>\n#end\n        </where>\n    </sql>\n\n    <!--查询指定行数据-->\n    <select id=\"queryAll\" resultMap=\"$!{tableInfo.name}VOMap\">\n        select *\n        from `$!tableInfo.obj.name`\n        <include refid=\"queryCondition\"/>\n    </select>\n\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Integer\">\n        select count(1)\n        from `$!tableInfo.obj.name`\n        <include refid=\"queryCondition\"/>\n    </select>\n \n\n    <!-- 批量插入 -->\n    <insert id=\"insertBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext),#end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n        (#foreach($column in $tableInfo.otherColumn )#{entity.$!{column.name}}#if($foreach.hasNext),#end#end)\n        </foreach>\n    </insert>\n    <!-- 批量插入或按主键更新 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext),#end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($foreach.hasNext),#end#end)\n        </foreach>\n        on duplicate key update\n         #foreach($column in $tableInfo.otherColumn)\n           $!column.obj.name = values($!column.obj.name) #if($foreach.hasNext),\n         #end#end\n    \n    </insert>\n\n</mapper>\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport $!{tableInfo.savePackageName}.entity.po.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\n\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表服务接口\")\npublic interface $!{tableName} extends IService<$!tableInfo.name> {\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name);\n\n    /**\n     * 查询多条数据\n     *\n     * @param current 查询页面\n     * @param pageSize 查询条数\n     * @param param 查询参数\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}VO> queryAll(int current, int pageSize, $!{tableInfo.name}Query param);\n\n    /**\n     * 通过实体作为筛选条件计数\n     *\n     * @param param 查询参数\n     * @return 数量\n     */\n    int count($!{tableInfo.name}Query param);\n\n}\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"ServiceImpl\")\n\n##保存文件（宏定义）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service.impl\")\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport com.github.pagehelper.PageHelper;\nimport $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\nimport org.springframework.stereotype.Service;\nimport jakarta.annotation.Resource;\n\nimport java.util.List;\n##表注释（宏定义）\n#tableComment(\"表服务实现类\")\n@Service(\"$!tool.firstLowerCase($tableInfo.name)Service\")\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Dao, $!{tableInfo.name}> implements $!{tableInfo.name}Service {\n    @Resource\n    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;\n\n    @Override\n    public $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryById($!pk.name);\n    }\n\n    @Override\n    public List<$!{tableInfo.name}VO> queryAll(int current, int pageSize, $!{tableInfo.name}Query param) {\n        PageHelper.startPage(current, pageSize);\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryAll(param);\n    }\n\n    @Override\n    public int count($!{tableInfo.name}Query param) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.count(param);\n    }\n}\n"
      }, {
        "name" : "vo.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/vo\", \"VO.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.vo\")\n\n##使用全局变量实现默认包导入\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n##使用宏定义实现类注释信息\n#tableComment(\"视图模型\")\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class $!{tableInfo.name}VO extends $!{tableInfo.name} {\n}"
      }, {
        "name" : "query.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/dto\", \"Query.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.dto\")\n\n##使用全局变量实现默认包导入\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n##使用宏定义实现类注释信息\n#tableComment(\"查询参数\")\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class $!{tableInfo.name}Query extends $!{tableInfo.name} {\n}"
      } ]
    },
    "MybatisPlus" : {
      "name" : "MybatisPlus",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n\n##定义服务名\n#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Service\"))\n\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.extension.api.ApiController;\nimport com.baomidou.mybatisplus.extension.api.R;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.entity.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表控制层\")\n@RestController\n@RequestMapping(\"$!tool.firstLowerCase($!tableInfo.name)\")\npublic class $!{tableName} extends ApiController {\n    /**\n     * 服务对象\n     */\n    @Resource\n    private $!{tableInfo.name}Service $!{serviceName};\n\n    /**\n     * 分页查询所有数据\n     *\n     * @param page 分页对象\n     * @param $!entityName 查询实体\n     * @return 所有数据\n     */\n    @GetMapping\n    public R selectAll(Page<$!tableInfo.name> page, $!tableInfo.name $!entityName) {\n        return success(this.$!{serviceName}.page(page, new QueryWrapper<>($!entityName)));\n    }\n\n    /**\n     * 通过主键查询单条数据\n     *\n     * @param id 主键\n     * @return 单条数据\n     */\n    @GetMapping(\"{id}\")\n    public R selectOne(@PathVariable Serializable id) {\n        return success(this.$!{serviceName}.getById(id));\n    }\n\n    /**\n     * 新增数据\n     *\n     * @param $!entityName 实体对象\n     * @return 新增结果\n     */\n    @PostMapping\n    public R insert(@RequestBody $!tableInfo.name $!entityName) {\n        return success(this.$!{serviceName}.save($!entityName));\n    }\n\n    /**\n     * 修改数据\n     *\n     * @param $!entityName 实体对象\n     * @return 修改结果\n     */\n    @PutMapping\n    public R update(@RequestBody $!tableInfo.name $!entityName) {\n        return success(this.$!{serviceName}.updateById($!entityName));\n    }\n\n    /**\n     * 删除数据\n     *\n     * @param idList 主键结合\n     * @return 删除结果\n     */\n    @DeleteMapping\n    public R delete(@RequestParam(\"idList\") List<Long> idList) {\n        return success(this.$!{serviceName}.removeByIds(idList));\n    }\n}\n"
      }, {
        "name" : "dao.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Dao\")\n\n##保存文件（宏定义）\n#save(\"/dao\", \"Dao.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"dao\")\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport $!{tableInfo.savePackageName}.entity.$!tableInfo.name;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\npublic interface $!{tableName} extends BaseMapper<$!tableInfo.name> {\n\n}\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/entity\", \".java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"entity\")\n\n##自动导入包（全局变量）\n$!{autoImport.vm}\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport java.io.Serializable;\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@SuppressWarnings(\"serial\")\npublic class $!{tableInfo.name} extends Model<$!{tableInfo.name}> {\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})//${column.comment}#end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n#foreach($column in $tableInfo.fullColumn)\n#getSetMethod($column)\n#end\n\n#foreach($column in $tableInfo.pkColumn)\n    /**\n     * 获取主键值\n     *\n     * @return 主键值\n     */\n    @Override\n    protected Serializable pkVal() {\n        return this.$!column.name;\n    }\n    #break\n#end\n}\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport $!{tableInfo.savePackageName}.entity.$!tableInfo.name;\n\n##表注释（宏定义）\n#tableComment(\"表服务接口\")\npublic interface $!{tableName} extends IService<$!tableInfo.name> {\n\n}\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"ServiceImpl\")\n\n##保存文件（宏定义）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service.impl\")\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\n\n##表注释（宏定义）\n#tableComment(\"表服务实现类\")\n@Service(\"$!tool.firstLowerCase($tableInfo.name)Service\")\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Dao, $!{tableInfo.name}> implements $!{tableInfo.name}Service {\n\n}\n"
      } ]
    },
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}CreateParam;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.mapper.$!{tableInfo.name}StructMapper;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport $!{tableInfo.savePackageName}.util.beans.CommonResult;\nimport $!{tableInfo.savePackageName}.util.beans.ListResult;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表控制层\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Tag(name = \"$!{tableInfo.name}\", description = \"$!{tableInfo.comment}\")\n@RestController\n@RequestMapping(\"/$!tool.firstLowerCase($tableInfo.name)\")\npublic class $!{tableName} {\n    @Resource\n    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;\n\n    @Operation(summary = \"获取指定$!{tableInfo.comment}信息\")\n    @GetMapping(\"/info/{id}\")\n    public CommonResult<$!{tableInfo.name}VO> get$!{tableInfo.name}(@PathVariable $!pk.shortType id) {\n        $!{tableInfo.name}VO vo = $!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id);\n        return vo != null ? CommonResult.success(vo) : CommonResult.error(HttpStatus.NOT_FOUND);\n    }\n\n    @Operation(summary = \"获取$!{tableInfo.comment}列表\")\n    @GetMapping(\"/list\")\n    public CommonResult<ListResult<$!{tableInfo.name}VO>> get$!{tableInfo.name}s(@RequestParam(defaultValue = \"1\") Integer current,\n            @RequestParam(defaultValue = \"10\") Integer pageSize,\n            $!{tableInfo.name}Query param) {\n        List<$!{tableInfo.name}VO> list = $!{tool.firstLowerCase($tableInfo.name)}Service.queryAll(current, pageSize, param);\n        int total = $!{tool.firstLowerCase($tableInfo.name)}Service.count(param);\n        return CommonResult.success(new ListResult<>(list, total));\n    }\n\n    @Operation(summary = \"添加$!{tableInfo.comment}\")\n    @PostMapping(\"/add\")\n    public CommonResult<Boolean> add$!{tableInfo.name}(@RequestBody $!{tableInfo.name}CreateParam param) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.insert(param) ? CommonResult.success(true) : CommonResult.error(HttpStatus.BAD_REQUEST);\n    }\n\n    @Operation(summary = \"修改指定$!{tableInfo.comment}信息\")\n    @PutMapping(\"/update/{id}\")\n    public CommonResult<Boolean> update$!{tableInfo.name}(@PathVariable $!pk.shortType id,\n            @RequestBody $!{tableInfo.name}CreateParam param) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.update(id, param) ? CommonResult.success(true) : CommonResult.error(HttpStatus.BAD_REQUEST);\n    }\n\n    @Operation(summary = \"删除指定$!{tableInfo.comment}\")\n    @DeleteMapping(\"/delete/{id}\")\n    public CommonResult<Boolean> delete$!{tableInfo.name}(@PathVariable $!pk.shortType id) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.deleteById(id) ? CommonResult.success(true) : CommonResult.error(HttpStatus.NOT_FOUND);\n    }\n}"
      }, {
        "name" : "dao.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Dao\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/dao\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;\n\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}CreateParam;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Mapper\npublic interface $!{tableName} {\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name);\n\n    /**\n     * 筛选条件查询\n     *\n     * @param param 查询参数\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}VO> queryAll($!{tableInfo.name}Query param);\n\n    /**\n     * 筛选条件计数\n     *\n     * @param param 查询参数\n     * @return 数量\n     */\n    int count($!{tableInfo.name}Query param);\n\n    /**\n     * 新增数据\n     *\n     * @param param 创建参数\n     * @return 影响行数\n     */\n    int insert($!{tableInfo.name}CreateParam param);\n\n    /**\n     * 批量新增数据（MyBatis原生foreach方法）\n     *\n     * @param entities List<$!{tableInfo.name}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n\n    /**\n     * 批量新增或按主键更新数据（MyBatis原生foreach方法）\n     *\n     * @param entities List<$!{tableInfo.name}> 实例对象列表\n     * @return 影响行数\n     * @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n\n    /**\n     * 修改数据\n     *\n     * @param param 创建参数\n     * @return 影响行数\n     */\n    int update($!{tableInfo.name}CreateParam param);\n\n    /**\n     * 通过主键删除数据\n     *\n     * @param $!pk.name 主键\n     * @return 影响行数\n     */\n    int deleteById($!pk.shortType $!pk.name);\n}"
      }, {
        "name" : "debug.json.vm",
        "code" : "// 禁止将生成结果写入到文件\n$!callback.setWriteFile(false)\n\n//调试表原始对象\n$!tool.debug($tableInfo.obj)\n\n//调试列原始对象\n$!tool.debug($tableInfo.fullColumn.get(0).obj)\n\n//调试列原始列类型\n$!tool.debug($tableInfo.fullColumn.get(0).obj.dataType)\n\n//获取原始列类型中的字段\nsqlType = $!tool.getField($tableInfo.fullColumn.get(0).obj.dataType, \"typeName\")\n\n//执行原始列类型中的方法\nsqlTypeLen = $!tableInfo.fullColumn.get(0).obj.dataType.getLength()\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/po\", \".java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.po\")\n\n##使用全局变量实现默认包导入\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\nimport java.io.Serial;\nimport java.io.Serializable;\n$!{autoImport.vm}\n\n##使用宏定义实现类注释信息\n#tableComment(\"实体类\")\n@Data\npublic class $!{tableInfo.name} implements Serializable {\n    @Serial\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})/**\n     * ${column.comment}\n     */\n     @Schema(description = \"${column.comment}\")#end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n\n#end\n\n## #foreach($column in $tableInfo.fullColumn)\n## ##使用宏定义实现get,set方法\n## #getSetMethod($column)\n## #end\n\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Dao.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao\">\n\n    <resultMap id=\"$!{tableInfo.name}Map\" type=\"$!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name}\">\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n    \n    <resultMap id=\"$!{tableInfo.name}VOMap\" type=\"$!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO\" extends=\"$!{tableInfo.name}Map\" autoMapping=\"true\"/>\n\n    <!--查询单个-->\n    <select id=\"queryById\" resultMap=\"$!{tableInfo.name}VOMap\">\n        select *\n        from `$!tableInfo.obj.name`\n        where `$!pk.obj.name` = #{$!pk.name}\n    </select>\n\n     <!--筛选条件-->\n   <sql id=\"queryCondition\">\n        <where>\n#foreach($column in $tableInfo.fullColumn)\n            <if test=\"$!column.name != null#if($column.type.equals(\"java.lang.String\")) and $!column.name != ''#end\">\n                and `$!column.obj.name` = #{$!column.name}\n            </if>\n#end\n        </where>\n    </sql>\n\n    <!--查询指定行数据-->\n    <select id=\"queryAll\" resultMap=\"$!{tableInfo.name}VOMap\">\n        select *\n        from `$!tableInfo.obj.name`\n        <include refid=\"queryCondition\"/>\n    </select>\n\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Integer\">\n        select count(1)\n        from `$!tableInfo.obj.name`\n        <include refid=\"queryCondition\"/>\n    </select>\n\n    <!--新增所有列-->\n    <insert id=\"insert\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into `$!{tableInfo.obj.name}`(#foreach($column in $tableInfo.otherColumn)`$!column.obj.name`#if($foreach.hasNext),#end#end)\n        values (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($foreach.hasNext),#end#end)\n    </insert>\n\n    <insert id=\"insertBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into `$!{tableInfo.obj.name}`(#foreach($column in $tableInfo.otherColumn)`$!column.obj.name`#if($foreach.hasNext),#end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($foreach.hasNext),#end#end)\n        </foreach>\n    </insert>\n\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into `$!{tableInfo.obj.name}`(#foreach($column in $tableInfo.otherColumn)`$!column.obj.name`#if($foreach.hasNext),#end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($foreach.hasNext),#end#end)\n        </foreach>\n        on duplicate key update\n        #foreach($column in $tableInfo.otherColumn)`$!column.obj.name` = values($!column.obj.name)#if($foreach.hasNext),\n        #end#end\n\n    </insert>\n\n    <!--通过主键修改数据-->\n    <update id=\"update\">\n        update `$!{tableInfo.obj.name}`\n        <set>\n#foreach($column in $tableInfo.otherColumn)\n            <if test=\"$!column.name != null#if($column.type.equals(\"java.lang.String\")) and $!column.name != ''#end\">\n                `$!column.obj.name` = #{$!column.name},\n            </if>\n#end\n        </set>\n        where `$!pk.obj.name` = #{$!pk.name}\n    </update>\n\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from `$!{tableInfo.obj.name}` where `$!pk.obj.name` = #{$!pk.name}\n    </delete>\n\n</mapper>"
      }, {
        "name" : "service.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Service\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}CreateParam;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\n\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表服务接口\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{tableName} {\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name);\n\n    /**\n     * 查询多条数据\n     *\n     * @param current 查询页面\n     * @param pageSize 查询条数\n     * @param param 查询参数\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}VO> queryAll(int current, int pageSize, $!{tableInfo.name}Query param);\n\n    /**\n     * 通过实体作为筛选条件计数\n     *\n     * @param param 查询参数\n     * @return 数量\n     */\n    int count($!{tableInfo.name}Query param);\n\n    /**\n     * 新增数据\n     *\n     * @param param 创建参数\n     * @return 是否成功\n     */\n    boolean insert($!{tableInfo.name}CreateParam param);\n\n    /**\n     * 修改数据\n     *\n     * @param $!pk.name 主键\n     * @param param 创建参数\n     * @return 是否成功\n     */\n    boolean update($!pk.shortType $!pk.name, $!{tableInfo.name}CreateParam param);\n\n    /**\n     * 通过主键删除数据\n     *\n     * @param $!pk.name 主键\n     * @return 是否成功\n     */\n    boolean deleteById($!pk.shortType $!pk.name);\n}"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"ServiceImpl\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}CreateParam;\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}Query;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.github.pagehelper.PageHelper;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Service(\"$!tool.firstLowerCase($!{tableInfo.name})Service\")\npublic class $!{tableName} implements $!{tableInfo.name}Service {\n    @Resource\n    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;\n\n    @Override\n    public $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryById($!pk.name);\n    }\n\n    @Override\n    public List<$!{tableInfo.name}VO> queryAll(int current, int pageSize, $!{tableInfo.name}Query param) {\n        PageHelper.startPage(current, pageSize);\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryAll(param);\n    }\n\n    @Override\n    public int count($!{tableInfo.name}Query param) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.count(param);\n    }\n\n    @Override\n    public boolean insert($!{tableInfo.name}CreateParam param) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.insert(param) > 0;\n    }\n\n    @Override\n    public boolean update($!pk.shortType $!pk.name, $!{tableInfo.name}CreateParam param) {\n        param.set$!{tool.firstUpperCase($!{pk.name})}($!pk.name);\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.update(param) > 0;\n    }\n\n    @Override\n    public boolean deleteById($!pk.shortType $!pk.name) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.deleteById($!pk.name) > 0;\n    }\n}"
      }, {
        "name" : "vo.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/vo\", \"VO.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.vo\")\n\n##使用全局变量实现默认包导入\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n##使用宏定义实现类注释信息\n#tableComment(\"视图模型\")\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class $!{tableInfo.name}VO extends $!{tableInfo.name} {\n}"
      }, {
        "name" : "query.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/dto\", \"Query.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.dto\")\n\n##使用全局变量实现默认包导入\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n##使用宏定义实现类注释信息\n#tableComment(\"查询参数\")\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class $!{tableInfo.name}Query extends $!{tableInfo.name} {\n}"
      }, {
        "name" : "createParam.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/dto\", \"CreateParam.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.dto\")\n\n##使用全局变量实现默认包导入\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n##使用宏定义实现类注释信息\n#tableComment(\"创建参数\")\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class $!{tableInfo.name}CreateParam extends $!{tableInfo.name} {\n}"
      }, {
        "name" : "structMapper.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity/mapper\", \"StructMapper.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity.mapper\")\n\n##使用全局变量实现默认包导入\nimport $!{tableInfo.savePackageName}.entity.dto.$!{tableInfo.name}CreateParam;\nimport $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}VO;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.Mapping;\nimport org.mapstruct.factory.Mappers;\n\n##使用宏定义实现类注释信息\n#tableComment(\"对象模型转换器\")\n@Mapper\npublic interface $!{tableInfo.name}StructMapper {\n    $!{tableInfo.name}StructMapper INSTANCE = Mappers.getMapper($!{tableInfo.name}StructMapper.class);\n\n    $!{tableInfo.name} to$!{tableInfo.name}($!{tableInfo.name}VO bo);\n    $!{tableInfo.name} to$!{tableInfo.name}($!{tableInfo.name}CreateParam param);\n}"
      } ]
    }
  },
  "columnConfig" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "title" : "disable",
        "type" : "BOOLEAN",
        "selectValue" : ""
      }, {
        "title" : "support",
        "type" : "SELECT",
        "selectValue" : "add,edit,query,del,ui"
      } ]
    }
  },
  "globalConfig" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "name" : "autoImport.vm",
        "value" : "##自动导入包（仅导入实体属性需要的包，通常用于实体类）\n#foreach($import in $importList)\nimport $!import;\n#end"
      }, {
        "name" : "define.vm",
        "value" : "##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"
      }, {
        "name" : "init.vm",
        "value" : "##初始化区域\n\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"book_\",\"\")))\n\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"
      }, {
        "name" : "mybatisSupport.vm",
        "value" : "##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"
      } ]
    }
  }
}